services:
  # Spring Boot Application
  logsentry-api:
    build: .
    container_name: logsentry-api
    ports:
      - "${APP_PORT}:8081"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    depends_on:
      - otel-collector
    networks:
      - logsentry
    volumes:
      - ${PWD}/logs:/app/logs
    restart: unless-stopped

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ${PWD}/otel-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "${OTEL_GRPC_PORT}:4317"   # OTLP gRPC receiver
      - "${OTEL_HTTP_PORT}:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
    depends_on:
      tempo:
        condition: service_started
      prometheus:
        condition: service_started
    networks:
      - logsentry
    restart: unless-stopped

  # Grafana Tempo
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ${PWD}/tempo.yml:/etc/tempo.yml:ro
      - tempo-data:/var/tempo
    ports:
      - "${TEMPO_PORT}:3200"   # Tempo HTTP
    networks:
      - logsentry
    restart: unless-stopped

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=exemplar-storage'
    volumes:
      - ${PWD}/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    networks:
      - logsentry
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - logsentry
    restart: unless-stopped

volumes:
  tempo-data:
  prometheus-data:
  grafana-data:

networks:
  logsentry:
    driver: bridge