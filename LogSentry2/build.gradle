plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.nana'
version = '0.0.1-SNAPSHOT'
description = 'LogSentry2'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Micrometer Tracing + OpenTelemetry (OTLP)
    implementation 'io.micrometer:micrometer-tracing:1.1.5'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel:1.1.5'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    implementation 'io.opentelemetry:opentelemetry-sdk'
    implementation 'io.micrometer:context-propagation'
    implementation 'io.micrometer:micrometer-observation:1.13.0'

    // Prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Logback JSON이 필요 없으면 classic만으로 충분
    implementation 'ch.qos.logback:logback-classic'
    // logstash 인코더
    implementation 'net.logstash.logback:logstash-logback-encoder:5.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
